name: CI

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  merge_group:
  workflow_dispatch:
  pull_request:
    branches: [master]

jobs:
  check_fmt:
    name: Check fmt and clippy
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: ["18"]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      - name: Check fmt
        run: cargo fmt -- --check
      - name: Check clippy
        run: make check-clippy
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Check prettier
        run: make npm_lint
      - name: Check docs building
        run: make run_docs

  macos_ci:
    name: MacOS Linking test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        rust: [stable]
        node: ["16", "18", "20"]
    steps:
      - uses: actions/checkout@v4
      - name: Install ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/install@v0.1
        with:
          crate: nj-cli
          version: latest
          use-tool-cache: true
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Install and Build
        run: |
          npm install
      - name: Test
        run: |
          make test_macos_ci

  smoke_test:
    name: Smoke test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        node: ["16", "18", "20"]
    steps:
      - uses: AbsaOSS/k3d-action@v2
        name: "Create fluvio k3d Cluster"
        with:
          cluster-name: "fluvio"
      - name: Install Fluvio Local Cluster
        uses: infinyon/fluvio@master
        with:
          cluster-type: local
          version: "stable"
      - name: Check Fluvio Installation
        run: |
          fluvio version
          fluvio topic list
          fluvio topic create "foobar"
          sleep 3
          echo foo | fluvio produce "foobar"
          fluvio consume foobar -B -d
      - name: Create Topic
        run: |
          fluvio topic create -p 1 -r 1 my-topic
      - uses: actions/checkout@v4
      - name: Install ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/install@v0.1
        with:
          crate: nj-cli
          version: latest
          use-tool-cache: true
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Install and Build
        run: |
          npm install
      - name: Test
        run: |
          make test_all
      - name: Run Examples
        run: |
          FLUVIO_DEV=1 make examples

  check_security:
    name: check security
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        node: ["16", "18"]
    steps:
      - uses: actions/checkout@v4
      - name: Install ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: npm audit
        run: npm audit
        continue-on-error: true
      #- name: Security audit
      #  uses: actions-rs/audit-check@v1
      #  with:
      #    token: ${{ secrets.GITHUB_TOKEN }}
  done:
    name: Done
    needs: [check_fmt, check_security, smoke_test, macos_ci]
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: echo Done
